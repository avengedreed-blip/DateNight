/* --- Spark Meter Theming & Base --- */
:root {
  --meter-bg: rgba(30, 35, 48, 0.5);
  --label-color: #f0f0f5;

  /* Default Theme Colors */
  --meter-start: #00e6d0;
  --meter-end: #ff477e;
  --glow-color: rgba(255, 71, 126, 0.7);

  /* Explicit fallback gradient */
  --spark-gradient: linear-gradient(90deg, var(--meter-start), var(--meter-end));
}

/* Progressive enhancement for modern browsers */
@supports (color-mix(in srgb, black, white)) {
  :root {
    --spark-gradient: linear-gradient(
      90deg,
      var(--meter-start) 0%,
      color-mix(in srgb, var(--meter-start), white 15%) 40%,
      var(--meter-end) 100%
    );
  }
}

/* Theme Variants */
.theme-truth {
  --meter-start: #00e6d0;
  --meter-end: #7affb5;
  --glow-color: rgba(122, 255, 181, 0.7);
}
.theme-dare {
  --meter-start: #ff477e;
  --meter-end: #ff85a9;
  --glow-color: rgba(255, 133, 169, 0.7);
}
.theme-trivia {
  --meter-start: #7aa2ff;
  --meter-end: #c1d4ff;
  --glow-color: rgba(193, 212, 255, 0.7);
}
.theme-consequence {
  --meter-start: #ffb347;
  --meter-end: #ffd27f;
  --glow-color: rgba(255, 210, 127, 0.7);
}

/* Layout */
.spark-meter {
  width: 100%;
  max-width: 420px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.spark-meter-header {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  padding: 0 0.25rem;
}

/* Responsive Typography */
.spark-meter-label {
  font-size: clamp(0.85rem, 2vw, 1rem);
  font-weight: 600;
  color: var(--label-color);
  letter-spacing: 0.05em;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

.spark-meter-value {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: clamp(1rem, 2.5vw, 1.125rem);
  font-weight: 700;
  color: var(--label-color);
  text-shadow: 0 0 10px var(--glow-color);
}

/* Bar Background */
.spark-meter-bar {
  position: relative;
  width: 100%;
  height: clamp(12px, 2.5vw, 20px);
  border-radius: 999px;
  background: var(--meter-bg);
  overflow: hidden;
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
}

/* Fill */
.spark-meter-fill {
  position: relative;
  height: 100%;
  border-radius: inherit;
  background: var(--spark-gradient);
  box-shadow: 0 0 16px 2px rgba(255, 255, 255, 0.08);
  transition: width 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);
}

/* Performance: pseudo-element glow */
/*
  The glow pseudo-element on the spark meter fills pulses continuously.  The
  animation speed is controlled via the CSS custom property `--pulse-duration`,
  which the React component sets based on the current meter value.  A higher
  meter value yields a shorter duration (faster pulse), creating a sense of
  growing energy as the extreme round approaches.  When the user has
  ``prefers-reduced-motion`` enabled, the animation is disabled and a static
  opacity is used instead to respect accessibility preferences.
*/
.spark-meter-fill::after {
  content: "";
  position: absolute;
  inset: -50%;
  border-radius: inherit;
  background: radial-gradient(circle, var(--glow-color) 20%, transparent 60%);
  opacity: 0;
  animation: pulseOpacity var(--pulse-duration, 2s) infinite ease-in-out;
  pointer-events: none;
}

@keyframes pulseOpacity {
  0%, 100% { opacity: 0.6; }
  50% { opacity: 0.9; }
}

/* Accessibility: reduce motion disables the pulse animation and applies a
   constant opacity to the glow instead. */
@media (prefers-reduced-motion: reduce) {
  .spark-meter-fill::after {
    animation: none;
    opacity: 0.6;
  }
}

@media (forced-colors: active) {
  .spark-meter, .spark-meter-fill {
    forced-color-adjust: none;
  }
  .spark-meter-label, .spark-meter-value {
    color: CanvasText;
  }
  .spark-meter-bar {
    background: Canvas;
    border: 1px solid CanvasText;
    box-shadow: none;
    backdrop-filter: none;
  }
  .spark-meter-fill {
    background: Highlight;
    box-shadow: none;
  }
  .spark-meter-fill::after {
    display: none;
  }
}
